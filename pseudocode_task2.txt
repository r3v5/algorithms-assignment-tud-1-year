// Structures
Structure DateTime:
    hour
    minute
    day
    month
    year
EndStructure

Structure Issue:
    issue_code
    description
EndStructure

Structure Resolution:
    resolution_code
    description
EndStructure

Structure QaLog:
    line_code;
    batch_code;
    struct DateTime date_time;
    product_id;
    struct Issue issue;
    struct Resolution resolution;
    reporting_employee_id
EndStructure


// Functions
Program GenerateReport
    Read qa_logs, size_of_logs, product_id, line_code
    issue_codes = {}
    issue_count = 0
    int i = 0
    N = size_of_logs

    While (i < N)
        If (qa_logs[i].line_code == line_code && qa_logs[i].product_id == product_id)
            issue_code = qa_logs[i].issue.issue_code
            found = 0
            int j = 0
            While (j < issue_count)
                If (issue_codes[j] == issue_code)
                    found = 1
                    break
                EndIf
            EndWhile
            If (found == False)
                issue_codes[issue_count++] = issue_code
                If (issue_count == MAX_ISSUES)
                    Print(stderr, "Maximum number of issues reached for product %d on line %d.\n", product_id, line_code)
                EndIf
            EndIf
        EndIf
    EndWhile
    Print("All issue codes for Product ID %d on Line Code %d:", product_id, line_code)
    While (i < issue_count)
        Print(" %d", issue_codes[i])
    EndWhile
EndProgram


Program DisplayQaLogs
    Read qa_logs, size_of_logs
    i = 0
    N = size_of_logs

    While (i < N)
        Print(
            qa_logs[i].line_code, qa_logs[i].batch_code,
            qa_logs[i].date_time.day, qa_logs[i].date_time.month, qa_logs[i].date_time.year,
            qa_logs[i].date_time.hour, qa_logs[i].date_time.minute,
            qa_logs[i].product_id,
            qa_logs[i].issue.issue_code, qa_logs[i].issue.description,
            qa_logs[i].resolution.resolution_code, qa_logs[i].resolution.description,
            qa_logs[i].reporting_employee_id
        )
        i++
    EndWhile
EndProgram


Program Main
    Read product_id, line_code
    struct QaLog qa_logs = {}
    size_of_logs = qa_logs.Length
    DisplayQaLogs(qa_logs, size_of_logs)
    GenerateReport(qa_logs, size_of_logs, product_id, line_code)
    return 0
EndProgram